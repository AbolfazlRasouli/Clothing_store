# Generated by Django 4.2.9 on 2024-02-25 06:32

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='delete')),
                ('delete_date', models.DateTimeField(blank=True, null=True, verbose_name='delete_date')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name category')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description category')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='name unique category')),
                ('image', models.ImageField(upload_to='category_image/', verbose_name='image category')),
                ('replay_cat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replize_category', to='product.category')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='delete')),
                ('delete_date', models.DateTimeField(blank=True, null=True, verbose_name='delete_date')),
                ('name', models.CharField(max_length=20, verbose_name='name color')),
                ('code', models.CharField(max_length=10, verbose_name='code color')),
            ],
            options={
                'verbose_name': 'Attribute color',
                'verbose_name_plural': 'Attribute colors',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('name', models.CharField(max_length=255, verbose_name='name discount')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description discount')),
                ('code', models.CharField(max_length=15, unique=True, verbose_name='code discount')),
                ('start_date', models.DateTimeField(verbose_name='start_date discount')),
                ('end_date', models.DateTimeField(verbose_name='end_date discount')),
                ('percent', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='percent discount')),
                ('amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='amount discount')),
                ('count', models.PositiveIntegerField(blank=True, null=True, verbose_name='count discount')),
            ],
            options={
                'verbose_name': ' discount',
                'verbose_name_plural': 'discounts',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='delete')),
                ('delete_date', models.DateTimeField(blank=True, null=True, verbose_name='delete_date')),
                ('name', models.CharField(max_length=255, verbose_name='name product')),
                ('brand', models.CharField(max_length=100, verbose_name='brand')),
                ('code', models.CharField(max_length=15, unique=True, verbose_name='code')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='name unique product')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name=' description product')),
                ('image', models.ImageField(upload_to='item_image/', verbose_name='image product')),
                ('price', models.PositiveIntegerField(verbose_name='price')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_category', to='product.category', verbose_name='category')),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount_product', to='product.discount', verbose_name='discount product')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='delete')),
                ('delete_date', models.DateTimeField(blank=True, null=True, verbose_name='delete_date')),
                ('name', models.CharField(max_length=10, verbose_name='size')),
            ],
            options={
                'verbose_name': 'Attribute size',
                'verbose_name_plural': 'Attribute sizes',
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='delete')),
                ('delete_date', models.DateTimeField(blank=True, null=True, verbose_name='delete_date')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.PositiveIntegerField(verbose_name='price')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_color', to='product.color', verbose_name='color')),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount_attribute', to='product.discount', verbose_name='discount attribute')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_product', to='product.product', verbose_name='product')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_size', to='product.size', verbose_name='size')),
            ],
            options={
                'verbose_name': 'Attribute',
                'verbose_name_plural': 'Attributes',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='delete')),
                ('delete_date', models.DateTimeField(blank=True, null=True, verbose_name='delete_date')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_like', to='product.product', verbose_name='product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_like', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'like',
                'verbose_name_plural': 'likes',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='item_image/', verbose_name='Image')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Image gallery',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='delete')),
                ('delete_date', models.DateTimeField(blank=True, null=True, verbose_name='delete_date')),
                ('body', ckeditor.fields.RichTextField(verbose_name='comment text')),
                ('status', models.CharField(choices=[('w', 'Waiting'), ('a', 'Approved'), ('na', 'Not Approved')], default='w', max_length=2, verbose_name='comment status')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_comments', to='product.product', verbose_name='comment product')),
                ('reply_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replize_comment', to='product.comment', verbose_name='replize comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to=settings.AUTH_USER_MODEL, verbose_name='comment user')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
            },
        ),
    ]
